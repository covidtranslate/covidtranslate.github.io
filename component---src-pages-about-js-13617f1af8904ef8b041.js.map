{"version":3,"sources":["webpack:///./src/templates/page.js","webpack:///./src/pages/about.js"],"names":["Page","children","location","pageTitle","featureImage","siteUrl","site","siteMetadata","canonical","Url","resolve","pathname","postClass","PostClass","isPage","isImage","title","type","header","className","srcClass","srcImg","divideData","data","midpoint","Math","ceil","length","slice","About","React","useState","namesFirstColumn","setFirstColumnNames","namesSecondColumn","setSecondColumnNames","useEffect","now","Date","ttl","JSON","parse","window","localStorage","getItem","cachedData","fetch","API_URL","then","res","json","error","Error","code","message","names","values","map","v","setItem","stringify","newTTL","getTime","firstColumn","secondColumn","catch","err","console","href","style","boxShadow","name","idx","key"],"mappings":"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","file":"component---src-pages-about-js-13617f1af8904ef8b041.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Url from 'url';\n\nimport { HeaderPage, Layout, ImgSharp } from '../components/common';\n\nimport { PostClass } from '../components/common/helpers';\nimport { WebsiteMeta } from '../components/common/meta';\n\n/**\n * Single page (/:slug)\n *\n * This file renders a single page and loads all the content.\n *\n */\nconst Page = ({ children, location, pageTitle, featureImage }) => {\n  const {\n    site: {\n      siteMetadata: { siteUrl },\n    },\n  } = useStaticQuery(graphql`\n    query SiteMetaDataQueryPage {\n      site {\n        siteMetadata {\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  const canonical = Url.resolve(siteUrl, location.pathname);\n\n  const postClass = PostClass({\n    isPage: true,\n    isImage: !!featureImage,\n  });\n\n  return (\n    <>\n      <WebsiteMeta title={pageTitle} canonical={canonical} type=\"WebSite\" />\n      <Layout isPage header={<HeaderPage />}>\n        <div className=\"inner\">\n          <article className={`post-full ${postClass}`}>\n            <header className=\"post-full-header\">\n              <h1 className=\"post-full-title\">{pageTitle}</h1>\n            </header>\n\n            {featureImage && (\n              <figure className=\"post-full-image\">\n                <ImgSharp\n                  // fluidClass=\"kg-card kg-code-card\"\n                  // fluidImg={fluidFeatureImg}\n                  // TODO: Remove below\n                  srcClass=\"kg-card kg-code-card\"\n                  srcImg={featureImage}\n                  title={pageTitle}\n                />\n              </figure>\n            )}\n\n            {/* The main page content */}\n            <section className=\"post-full-content\">\n              <div className=\"post-content load-external-scripts\">\n                {children}\n              </div>\n            </section>\n          </article>\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  pageTitle: PropTypes.string.isRequired,\n  featureImage: PropTypes.string,\n  location: PropTypes.object.isRequired,\n};\n\nexport default Page;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from '../templates/page';\n\n/**\n * Main index page (home page)\n *\n * Loads all posts from Ghost\n *\n */\nconst API_URL = 'https://sheets.googleapis.com/v4/spreadsheets';\nconst API_KEY = 'AIzaSyADMD4DdpEg7fY4qp6mHDvYCJWxLSf8Ohg';\nconst SHEET_ID = '18s1tHFbnzrweiFvds2xIWdqtjoAHaCCiCOls2It7JL0';\nconst DATA_RANGE = 'A2:A';\n\nconst CONTRIBUTOR_LIST_DATA_KEY = 'CONTRIBUTORS:DATA';\nconst CONTRIBUTOR_LIST_TTL_KEY = 'CONTRIBUTORS:TTL';\n\nfunction divideData(data) {\n  const midpoint = Math.ceil(data.length / 2);\n  return [data.slice(0, midpoint), data.slice(midpoint, data.length)];\n}\n\nconst About = ({ location }) => {\n  const [namesFirstColumn, setFirstColumnNames] = React.useState([]);\n  const [namesSecondColumn, setSecondColumnNames] = React.useState([]);\n\n  React.useEffect(() => {\n    const now = new Date();\n    const ttl = new Date(\n      JSON.parse(window.localStorage.getItem(CONTRIBUTOR_LIST_TTL_KEY))\n    );\n    const cachedData = JSON.parse(\n      window.localStorage.getItem(CONTRIBUTOR_LIST_DATA_KEY)\n    );\n\n    if (!cachedData || !ttl || ttl < now) {\n      fetch(`${API_URL}/${SHEET_ID}/values/${DATA_RANGE}?key=${API_KEY}`)\n        .then(res => res.json())\n        .then(data => {\n          if (data.error) {\n            throw new Error(`[${data.error.code}] ${data.error.message}`);\n          }\n          const { values } = data;\n          const names = values.map(v => v[0]);\n\n          window.localStorage.setItem(\n            CONTRIBUTOR_LIST_DATA_KEY,\n            JSON.stringify(names)\n          );\n\n          const fifteenMinutesInMS = 15 * 60 * 1000;\n          const newTTL = new Date(now.getTime() + fifteenMinutesInMS);\n          window.localStorage.setItem(\n            CONTRIBUTOR_LIST_TTL_KEY,\n            JSON.stringify(newTTL)\n          );\n\n          const [firstColumn, secondColumn] = divideData(names);\n          setFirstColumnNames(firstColumn);\n          setSecondColumnNames(secondColumn);\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    } else if (cachedData && ttl && ttl >= now) {\n      const [firstColumn, secondColumn] = divideData(cachedData);\n      setFirstColumnNames(firstColumn);\n      setSecondColumnNames(secondColumn);\n    }\n  }, []);\n\n  return (\n    <Page location={location} pageTitle=\"About Us\">\n      <p>\n        The<b> COVID Translate Project</b> is led by many volunteers from around\n        the world to translate the documents published by Korea Centers for\n        Disease Control and Prevention (\n        <a href=\"https://twitter.com/KoreaCDC\">@KoreaCDC</a>) to English and\n        various other languages, with the mission of spreading the knowledge\n        worldwide to fight COVID-19.\n      </p>\n      <h2>Our Story</h2>\n      <p>\n        Late in the evening on <b>Friday, March 27th</b>, Professor Sebastian\n        Seung tweeted a call for volunteers to crowdsource a translation of a\n        KCDC COVID-19 protocol for local governments and public health\n        officials:\n      </p>\n      <a\n        href=\"https://twitter.com/SebastianSeung/status/1243753450074181637?s=20\"\n        style={{ boxShadow: 'none' }}\n      >\n        <blockquote>\n          1/ SAVE LIVES by translating Korean→English! 75 page playbook for\n          @KoreaCDC’s fight against #Covid19. Let’s translate into English by\n          Monday morning. No time to lose! Please share the link.\n        </blockquote>\n      </a>\n      <p>\n        Within hours, a global team of people had jumped in.{' '}\n        <b>Over 50 people</b> in the Google Doc editing together often caused\n        the page to freeze, as we translated at speed from a (very rough) draft\n        seeded from machine translation.\n      </p>\n      <p>\n        We created teams for every major task and got to know each other as we\n        worked furiously day and night. <b>Two days later</b>, we had a complete\n        and technically accurate—if not perfectly polished—document, and we\n        released it as &quot;v0.9&quot; so that we could get the information out\n        to people as quickly as possible (click{' '}\n        <a href=\"https://twitter.com/SebastianSeung/status/1245012707549548544\">\n          here\n        </a>{' '}\n        for more about the crowdsourcing process).\n      </p>\n      <p>\n        Over the next week, we worked on translating the appendices to that\n        document and proofreading thoroughly, and we released final versions of\n        those two documents on April 6 as &quot;v1.0&quot;. The document is\n        comprehensive, detailed, and practical and covers everything from\n        quarantine protocols to how to deal with the deceased.\n      </p>\n      <p>\n        While every country&apos;s situation is unique, our hope is that by\n        translating some of Korea&apos;s protocols into English, we can put that\n        information in front of more eyes and increase our collective global\n        know-how about how to fight this disease. And others seem to agree: we\n        now have international teams translating the protocol from English into\n        other languages!\n      </p>\n      <h2>Join us</h2>\n      <p>\n        We&apos;re still translating more KCDC protocols, though not at the same\n        mad pace. <a href=\"https://forms.gle/9yakwuCyC6GNCbNF9\">Join us</a> if\n        you&apos;d like to help, even if you can only spare a few hours a week.\n        We&apos;re now working on some more detailed and specific protocols for\n        hospitals, testing centers, etc.\n      </p>\n      <p>\n        Keep checking back here for new documents, or follow us on social media\n        to stay up to date. For general inquiries, please contact us at{' '}\n        <a href=\"mailto:covidtranslate@gmail.com\">covidtranslate@gmail.com</a>.\n        For more information on translating into other languages, please contact{' '}\n        <a href=\"mailto:covidtranslate.international@gmail.com\">\n          covidtranslate.international@gmail.com\n        </a>\n        .\n      </p>\n      {namesFirstColumn.length > 0 && (\n        <>\n          <h2>Our volunteers</h2>\n          <div className=\"contributor-list\">\n            <ul>\n              {namesFirstColumn.map((name, idx) => (\n                <li key={`${idx}-${name}`}>{name}</li>\n              ))}\n            </ul>\n            <ul>\n              {namesSecondColumn.map((name, idx) => (\n                <li key={`${idx}-${name}`}>{name}</li>\n              ))}\n            </ul>\n          </div>\n        </>\n      )}\n    </Page>\n  );\n};\n\nAbout.propTypes = {\n  location: PropTypes.object.isRequired,\n};\n\nexport default About;\n"],"sourceRoot":""}